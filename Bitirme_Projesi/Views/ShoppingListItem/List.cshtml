@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
<link href="~/css/PagedList.css" rel="stylesheet" />
@model IPagedList<ShoppingListProductViewModel>

<div class="container">
    <div class="row">
        <!-- SEARCH BAR -->
        <div class="col-md-12">
            <div class="header-search">
                <form class="row" id="searchForm">
                    <div class="col-md-4">
                        <select class="form-control" id="categorySelect">
                            <option value="0">Tüm Kategoriler</option>
                            @if (Model.Count > 0)
                            {
                                var categories = Model[0].Categories;
                                foreach (var category in categories)
                                {
                                    <option value="@category.Value">@category.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-6">
                        <input class="form-control" id="searchInput" name="search" placeholder="Ürün aramak için buraya yazın." />
                    </div>
                    <div class="col-md-2">
                        <button class="btn btn-primary" id="searchButton" type="submit"><i class="fa-solid fa-magnifying-glass"></i> Ara</button>
                        <button class="btn btn-dark" id="resetButton"><i class="fa-solid fa-rotate-left"></i></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- /SEARCH BAR -->
    </div>

    @*Eklendi alert*@
    <div class="alert alert-success mt-3" role="alert" id="successAlert" style="display: none;">
        @*Ürün başarıyla listenize eklendi.*@
    </div>

    <div class="row mt-4" id="productList">
        @foreach (var product in Model)
        {
            <div class="col-md-3 product-card" data-category="@product.CategoryId">
                <div class="card mb-4">
                    <img src="@product.ImageFilePath" class="card-img-top" alt="" width="100%">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <h5 class="card-title">@product.Name</h5>
                            <div class="badge bg-gradient-primary-to-secondary text-white mb-4"><div class="text-uppercase">@product.CategoryName</div></div>
                        </div>
                        <p class="card-text">Fiyat: ₺@product.Price</p>

                        <div class="d-flex justify-content-between">
                            <div class="input-group">
                                <div style="width: 60px;">
                                    <input type="number" class="form-control" id="quantityInput_@product.ProductId" value="1" min="1" step="1">
                                </div>

                                <div class="input-group-append">
                                    <button class="btn btn-danger" type="button" onclick="decreaseQuantity(@product.ProductId)"><i class="fa-solid fa-minus"></i></button>
                                    <button class="btn btn-success" type="button" onclick="increaseQuantity(@product.ProductId)"><i class="fa-solid fa-plus"></i></button>
                                </div>
                            </div>
                            <div>

                                <button class="btn btn-primary addToCartBtn" onclick="addItemToList(@product.ProductId)">
                                    Ekle
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    <div class="pagination">
        @if (Model.PageCount > 0)
        {
            <p>
                Gösterilen Ürünler: @((Model.PageNumber - 1) * Model.PageSize + 1) -
                @Math.Min(Model.PageNumber * Model.PageSize, Model.TotalItemCount)
                / @Model.TotalItemCount
            </p>
        }

        @Html.PagedListPager((IPagedList)Model, page => Url.Action("List", new { id = @ViewContext.RouteData.Values["id"], page }))
    </div>

    </div>
</div>

@section Scripts {
    <script>
        const productList = document.getElementById('productList');
        const searchForm = document.getElementById('searchForm');
        const searchInput = document.getElementById('searchInput');
        const categorySelect = document.getElementById('categorySelect');
        const allProductCards = document.querySelectorAll('.product-card');

        function increaseQuantity(productId) {
            var inputElement = document.getElementById("quantityInput_" + productId);
            var currentValue = parseInt(inputElement.value);
            inputElement.value = currentValue + 1;
        }

        function decreaseQuantity(productId) {
            var inputElement = document.getElementById("quantityInput_" + productId);
            var currentValue = parseInt(inputElement.value);
            if (currentValue > 1) {
                inputElement.value = currentValue - 1;
            }
        }

        // pagedlist sonrası güncel search
        $(document).ready(function () {
            $("#categorySelect").change(function () {
                filterAndLoadProducts();
            });

            $("#searchButton").click(function () {
                filterAndLoadProducts();
            });

            $("#resetButton").click(function () {
                resetFilters();
            });

            function filterAndLoadProducts() {
                var searchTerm = $("#searchInput").val();
                var selectedCategory = $("#categorySelect").val();
                var url = '@Url.Action("List", "ShoppingListItem")';

                if (selectedCategory != null && selectedCategory !== "0") {
                    url += "?category=" + encodeURIComponent(selectedCategory);
                }

                if (searchTerm) {
                    url += url.indexOf("?") === -1 ? "?" : "&";
                    url += "search=" + encodeURIComponent(searchTerm);
                }

                window.location.href = url;
            }

            function resetFilters() {
                var url = '@Url.Action("List", "ShoppingListItem")';

                window.location.href = url;
            }
        });

        // search reset button
        //document.addEventListener("DOMContentLoaded", function () {
        //    var resetButton = document.getElementById("resetButton");
        //    resetButton.addEventListener("click", function (e) {
        //        e.preventDefault();

        //        categorySelect.value = "0";
        //        searchInput.value = "";

        //        document.getElementById("searchForm").submit();
        //    })
        //});


        // AddToList
        function addItemToList(productId) {
            var quantityInput = document.getElementById("quantityInput_" + productId);
            var quantity = quantityInput.value;

            var shoppingListId = getShoppingListIdFromUrl();

            var data = {
                ShoppingListId: shoppingListId,
                ProductId: productId,
                Amount: quantity
            };

            $.ajax({
                type: 'POST',
                url: '/ShoppingListItem/AddToList',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (response) {
                    console.log('Ürün başarıyla eklendi');
                    if (response.success) {
                        var successAlert = document.getElementById('successAlert');
                        successAlert.innerHTML = response.message;
                        successAlert.style.display = 'block';
                        setTimeout(function () {
                            successAlert.style.display = 'none';
                        }, 2000);
                    } else {
                        alert("Hata oluştu: " + response.message);
                    }
                },
                error: function () {
                    console.log('Bir hata oluştu');
                }
            });
        }

        function getShoppingListIdFromUrl() {
            var url = window.location.href;
            var urlParts = url.split("/");
            var listIdIndex = urlParts.indexOf("List");
            if (listIdIndex !== -1 && listIdIndex + 1 < urlParts.length) {
                var shoppingListId = parseInt(urlParts[listIdIndex + 1]);
                if (!isNaN(shoppingListId)) {
                    return shoppingListId;
                }
            }
            return null;
        }

        $(document).ready(function () {
            $('.addToCardBtn').click(function () {
                var productId = $(this).closest(".product-card").data('productid');
                addItemToList(productId);
            });
        });

    </script>
}